#N canvas 637 50 799 676 10;
#X obj 46 622 outlet;
#N canvas 11 50 867 431 latch 0;
#X text 482 130 THE LATCH!;
#X msg 523 237 1;
#X msg 555 237 0;
#X obj 428 95 inlet;
#X obj 428 313 outlet;
#X obj 523 192 sel 4;
#X obj 555 212 t b;
#N canvas 8 50 759 486 latch-notes 0;
#N canvas 1010 59 817 631 latcher 0;
#X obj 220 378 bag;
#X msg 317 311 flush;
#X obj 169 81 t a a, f 17;
#X obj 285 257 t a b;
#X obj 169 44 inlet;
#X obj 285 475 outlet;
#X obj 443 58 inlet;
#X obj 285 126 stripnote;
#X obj 285 228 pack, f 9;
#X obj 443 142 t b;
#X obj 169 103 unpack;
#X obj 169 156 swap;
#X obj 169 198 pack;
#X obj 169 220 route 0;
#X obj 220 400 pack 1 0;
#X obj 169 241 pack 0 100;
#X connect 0 0 14 0;
#X connect 1 0 0 0;
#X connect 2 0 10 0;
#X connect 2 1 7 0;
#X connect 3 0 5 0;
#X connect 3 1 1 0;
#X connect 4 0 2 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 3 0;
#X connect 9 0 1 0;
#X connect 10 0 11 0;
#X connect 10 1 11 1;
#X connect 11 0 12 0;
#X connect 11 1 12 1;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 5 0;
#X connect 15 0 0 0;
#X restore 43 413 pd latcher;
#X obj 173 298 spigot 1;
#X obj 43 298 spigot 0;
#X obj 226 272 == 0;
#X obj 193 134 inlet;
#X obj 43 626 outlet;
#X obj 43 106 inlet;
#X text 241 135 bang enable / disables latch;
#X text 44 53 incoming notes get sent through latch if enabled \, or
directly to output if disabled;
#X obj 309 298 b;
#X obj 193 159 t f f b, f 17;
#X connect 0 0 5 0;
#X connect 1 0 5 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 4 0 10 0;
#X connect 6 0 2 0;
#X connect 6 0 1 0;
#X connect 9 0 0 1;
#X connect 10 0 2 1;
#X connect 10 1 3 0;
#X connect 10 2 9 0;
#X restore 428 270 pd latch-notes;
#X obj 523 167 r seq3-\$1-actions;
#X connect 1 0 7 1;
#X connect 2 0 7 1;
#X connect 3 0 7 0;
#X connect 5 0 1 0;
#X connect 5 1 6 0;
#X connect 6 0 2 0;
#X connect 7 0 4 0;
#X connect 8 0 5 0;
#X restore 49 135 pd latch;
#N canvas 208 50 1523 881 states 0;
#X text 284 14 Controls State With Aux Button;
#X obj 347 317 list prepend, f 13;
#X obj 347 339 route 0 1, f 20;
#X obj 226 17 inlet;
#X obj 226 69 sel 1, f 12;
#X obj 750 316 f;
#X obj 750 263 sel 1;
#X obj 750 223 t f f, f 7;
#X obj 750 342 sel 1;
#X obj 750 288 del 500;
#X msg 258 441 1;
#X obj 258 464 b;
#X obj 258 531 sel 0 1 2 3 4, f 66;
#X obj 226 122 sel 0;
#X msg 997 103 stop;
#X msg 938 102 0;
#X text 973 104 =;
#X text 973 134 =;
#X msg 938 132 1;
#X msg 997 133 start;
#X text 973 164 =;
#X msg 938 162 2;
#X msg 997 163 recenable;
#X text 943 494 when something is recorded switch the variable to 3
;
#X text 973 194 =;
#X msg 937 192 3;
#X msg 997 193 record;
#X text 973 224 =;
#X msg 937 222 4;
#X msg 996 222 latch on;
#X obj 415 395 t f f, f 17;
#X msg 415 373 4;
#X obj 626 704 t f f;
#X msg 626 679 0;
#X msg 533 555 1;
#X msg 349 556 0;
#X obj 349 579 t f f;
#X obj 258 672 t f f;
#X msg 258 649 1;
#X msg 441 729 0;
#X obj 441 752 t f f;
#X msg 750 364 2;
#X obj 750 389 t f f, f 17;
#X text 930 558 latch off is simply in all of these \, eg right outlet
of select;
#X text 577 557 if recording: end seq and go back to play;
#X obj 414 219 f;
#X obj 533 579 t f f b, f 8;
#X obj 347 166 t b b, f 10;
#X obj 414 241 sel 0;
#X msg 414 273 0;
#X obj 446 270 t b;
#X msg 446 291 1;
#X obj 226 97 v seq3-\$1-state;
#X obj 432 189 r seq3-\$1-count-notes;
#X obj 415 420 v seq3-\$1-state;
#X obj 750 420 v seq3-\$1-state;
#X obj 866 420 s seq3-\$1-actions;
#X obj 586 612 s seq3-\$1-end_seq;
#X obj 559 634 s seq3-\$1-actions;
#X obj 533 656 v seq3-\$1-state;
#X obj 658 732 s seq3-\$1-actions;
#X obj 625 755 v seq3-\$1-state;
#X obj 473 774 s seq3-\$1-actions;
#X obj 441 797 v seq3-\$1-state;
#X obj 258 735 v seq3-\$1-state;
#X obj 290 704 s seq3-\$1-actions;
#X obj 349 621 v seq3-\$1-state;
#X obj 381 601 s seq3-\$1-actions;
#X obj 258 497 v seq3-\$1-state;
#X obj 531 421 s seq3-\$1-actions;
#X obj 1146 156 r seq3-\$1-actions;
#X obj 1146 178 sel 0 1 2 3 4, f 25;
#X msg 1146 209 0;
#X obj 1235 266 s led;
#X msg 1180 209 3;
#X msg 1214 212 6;
#X msg 1249 212 1;
#X msg 1283 213 4;
#X obj 947 638 r cg-midi-start;
#X obj 947 711 t f f, f 17;
#X obj 947 742 v seq3-\$1-state;
#X obj 1063 742 s seq3-\$1-actions;
#X obj 947 660 t b;
#X msg 947 682 1;
#X obj 1197 708 t f f, f 17;
#X obj 1197 742 v seq3-\$1-state;
#X obj 1313 742 s seq3-\$1-actions;
#X obj 1197 660 t b;
#X obj 1197 637 r cg-midi-stop;
#X msg 1197 683 0;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 2 1 31 0;
#X connect 3 0 4 0;
#X connect 4 0 52 0;
#X connect 4 1 7 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 7 1 5 1;
#X connect 8 0 41 0;
#X connect 9 0 5 0;
#X connect 10 0 7 0;
#X connect 10 0 11 0;
#X connect 11 0 68 0;
#X connect 12 0 38 0;
#X connect 12 1 35 0;
#X connect 12 2 39 0;
#X connect 12 3 34 0;
#X connect 12 4 33 0;
#X connect 13 0 47 0;
#X connect 13 1 10 0;
#X connect 30 0 54 0;
#X connect 30 1 69 0;
#X connect 31 0 30 0;
#X connect 32 0 61 0;
#X connect 32 1 60 0;
#X connect 33 0 32 0;
#X connect 34 0 46 0;
#X connect 35 0 36 0;
#X connect 36 0 66 0;
#X connect 36 1 67 0;
#X connect 37 0 64 0;
#X connect 37 1 65 0;
#X connect 38 0 37 0;
#X connect 39 0 40 0;
#X connect 40 0 63 0;
#X connect 40 1 62 0;
#X connect 41 0 42 0;
#X connect 42 0 55 0;
#X connect 42 1 56 0;
#X connect 45 0 48 0;
#X connect 46 0 59 0;
#X connect 46 1 58 0;
#X connect 46 2 57 0;
#X connect 47 0 1 0;
#X connect 47 1 45 0;
#X connect 48 0 49 0;
#X connect 48 1 50 0;
#X connect 49 0 1 1;
#X connect 50 0 51 0;
#X connect 51 0 1 1;
#X connect 52 0 13 0;
#X connect 53 0 45 1;
#X connect 68 0 12 0;
#X connect 70 0 71 0;
#X connect 71 0 72 0;
#X connect 71 1 74 0;
#X connect 71 2 75 0;
#X connect 71 3 76 0;
#X connect 71 4 77 0;
#X connect 72 0 73 0;
#X connect 74 0 73 0;
#X connect 75 0 73 0;
#X connect 76 0 73 0;
#X connect 77 0 73 0;
#X connect 78 0 82 0;
#X connect 79 0 80 0;
#X connect 79 1 81 0;
#X connect 82 0 83 0;
#X connect 83 0 79 0;
#X connect 84 0 85 0;
#X connect 84 1 86 0;
#X connect 87 0 89 0;
#X connect 88 0 87 0;
#X connect 89 0 84 0;
#X restore 550 169 pd states;
#X obj 550 143 inlet aux;
#X obj 186 200 r seq3-\$1-actions;
#X obj 186 222 sel 2;
#X msg 186 244 1;
#X obj 218 244 t b;
#X msg 218 266 0;
#X obj 49 479 v seq3-\$1-state, f 16;
#X obj 81 457 s seq3-\$1-actions;
#X msg 49 412 3;
#X obj 49 434 t f f;
#X obj 49 221 list prepend notes;
#X obj 376 325 f \$1;
#X obj 225 326 f \$1;
#X obj 376 279 loadbang;
#X obj 225 291 r saveState;
#X msg 158 343 clear;
#X obj 49 381 sel 1, f 6;
#X obj 158 405 text define seq-\$1;
#X obj 49 84 t a a;
#N canvas 8 50 1183 836 countem 0;
#X obj 443 416 s seq3-\$1-count-notes;
#X obj 346 183 inlet;
#X obj 440 380 + 1;
#X msg 402 333 -1;
#X msg 445 333 1;
#X obj 364 303 t b b;
#X obj 364 394 max 0;
#X obj 424 302 t b b;
#X obj 346 205 unpack 0 0;
#X obj 413 231 sel 0;
#X obj 364 372 f 0;
#X floatatom 497 395 5 0 0 0 - - -, f 5;
#X connect 1 0 8 0;
#X connect 2 0 10 1;
#X connect 2 0 0 0;
#X connect 2 0 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 1;
#X connect 5 0 10 0;
#X connect 5 1 3 0;
#X connect 6 0 2 0;
#X connect 7 0 10 0;
#X connect 7 1 4 0;
#X connect 8 1 9 0;
#X connect 9 0 5 0;
#X connect 9 1 7 0;
#X connect 10 0 6 0;
#X restore 81 109 pd countem;
#X obj 49 161 t a a;
#X obj 81 190 s \$0-pass;
#X obj 49 62 inlet notes, f 17;
#N canvas 58 50 1381 963 quantize 0;
#X floatatom 1125 655 5 0 0 0 - - -, f 5;
#X msg 1113 677 qAmt \$1;
#X obj 138 346 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 93 218 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 728 828 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 23 50 1276 860 q 0;
#X msg 396 237 1;
#X obj 436 390 i;
#X obj 396 524 list append;
#X obj 396 546 t a b;
#X msg 428 573 1;
#X obj 436 366 + 0.49999;
#X obj 350 183 inlet;
#X msg 744 274 1;
#X obj 750 434 list append;
#X obj 750 456 t a b;
#X msg 782 480 1;
#X obj 814 154 inlet manually set;
#X obj 814 246 t b a;
#X obj 787 360 t b;
#X obj 396 265 text get seq-\$1;
#X obj 396 606 text set seq-\$1;
#X obj 750 516 text set seq-\$1;
#X obj 744 302 text get seq-\$1;
#X obj 396 297 list split 1;
#X obj 814 176 + 1;
#X obj 692 640 s length-\$1;
#X obj 743 324 list split 1;
#X obj 787 390 f, f 6;
#X obj 470 469 max 2;
#X obj 786 411 max 2;
#X connect 0 0 14 0;
#X connect 1 0 23 0;
#X connect 2 0 3 0;
#X connect 3 0 15 0;
#X connect 3 1 4 0;
#X connect 4 0 15 1;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 17 0;
#X connect 8 0 9 0;
#X connect 9 0 16 0;
#X connect 9 1 10 0;
#X connect 10 0 16 1;
#X connect 11 0 19 0;
#X connect 12 0 7 0;
#X connect 12 1 22 1;
#X connect 13 0 22 0;
#X connect 14 0 18 0;
#X connect 17 0 21 0;
#X connect 18 0 2 0;
#X connect 18 1 5 0;
#X connect 19 0 12 0;
#X connect 21 0 8 0;
#X connect 21 1 13 0;
#X connect 22 0 24 0;
#X connect 23 0 2 1;
#X connect 23 0 20 0;
#X connect 24 0 20 0;
#X connect 24 0 8 1;
#X restore 666 865 pd q just the length(nearest beat);
#X obj 93 458 s \$0-2-seq-player;
#X text 113 216 read raw text;
#X text 171 349 read from quantized text;
#X obj 1051 559 loadbang;
#X msg 901 815 4;
#X obj 256 34 loadbang;
#X obj 138 370 f \$1;
#X obj 93 284 f \$1;
#X msg 93 308 repoint symbol seq-\$1;
#X obj 838 779 cg-quan-the-seq seq-\$1;
#X msg 138 397 repoint symbol seq-\$1-QR;
#X msg 911 838 1;
#X obj 634 141 sel 3;
#X obj 666 226 spigot 0;
#X msg 634 163 1;
#X obj 666 248 t b b;
#X msg 758 239 0;
#X obj 880 746 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1051 581 25;
#X obj 256 56 f \$2;
#X obj 256 82 sel 0 1 2, f 58;
#X obj 666 582 spigot, f 25;
#X obj 256 104 t b b;
#X msg 302 138 0;
#X obj 666 654 t b b, f 25;
#X obj 838 685 spigot;
#X msg 989 646 setLength \$1;
#X floatatom 989 611 5 0 0 0 - - -, f 5;
#X obj 666 686 spigot;
#X obj 783 456 f;
#X obj 877 644 ==;
#X obj 473 361 f;
#X obj 393 136 t b f f;
#X msg 392 112 1;
#X msg 522 105 0;
#X obj 523 133 t b f b;
#X msg 586 165 1;
#X text 996 38 on load sets the q option;
#X text 998 415 100 ticks per beat;
#X text 1003 442 q to 25 = 16th notes;
#X text 1012 467 q to 100 = quarter notes;
#X text 1027 489 etc...;
#X text 960 799 this still needs some work \, has a maximum amount
of notes than it freezes;
#X text 753 887 this works great;
#X obj 635 118 r seq3-\$1-actions;
#X obj 666 198 r seq3-\$1-doit;
#X connect 0 0 1 0;
#X connect 1 0 15 1;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 4 0 5 0;
#X connect 9 0 24 0;
#X connect 10 0 5 1;
#X connect 11 0 25 0;
#X connect 12 0 16 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 16 0 6 0;
#X connect 17 0 5 1;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 20 0 19 1;
#X connect 21 0 27 0;
#X connect 21 1 22 0;
#X connect 22 0 19 1;
#X connect 23 0 15 0;
#X connect 24 0 1 0;
#X connect 25 0 26 0;
#X connect 26 0 28 0;
#X connect 26 1 39 0;
#X connect 26 2 40 0;
#X connect 27 0 30 0;
#X connect 28 0 13 0;
#X connect 28 1 29 0;
#X connect 29 0 37 0;
#X connect 30 0 34 0;
#X connect 30 1 31 0;
#X connect 31 0 15 0;
#X connect 32 0 15 1;
#X connect 33 0 32 0;
#X connect 34 0 5 0;
#X connect 35 0 34 1;
#X connect 35 0 36 0;
#X connect 36 0 31 1;
#X connect 37 0 27 1;
#X connect 38 0 13 0;
#X connect 38 1 35 0;
#X connect 38 2 37 0;
#X connect 39 0 38 0;
#X connect 40 0 41 0;
#X connect 41 0 12 0;
#X connect 41 1 35 0;
#X connect 41 2 42 0;
#X connect 42 0 37 0;
#X connect 50 0 18 0;
#X connect 51 0 19 0;
#X restore 47 543 pd quantize stuff;
#N canvas 99 50 1652 963 play-the-seq 0;
#X obj 342 890 outlet;
#X obj 570 322 r seq3-\$1-actions;
#X obj 433 94 sel 0 1, f 10;
#X obj 433 55 r seq3-\$1-actions;
#X obj 623 379 t b;
#X obj 550 514 s 2-tr-\$0;
#X msg 550 484 0 \, 1 \, 2;
#X obj 424 572 r 2-tr-\$0;
#X obj 507 573 r \$0-2-seq-player;
#X obj 611 120 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 496 206 spigot;
#X obj 572 205 spigot;
#X text 638 120 lock start to beat;
#X obj 611 24 loadbang;
#X text 498 848 the sequenced notes can simply be bagged here and when
the loop happens kill note ons. so that when trimming there wont be
any weirdness;
#X obj 418 830 bag;
#X msg 444 798 flush;
#X obj 342 732 t a a;
#X obj 418 852 pack 0 0;
#X obj 612 445 s \$0-flush;
#X obj 444 772 r \$0-flush;
#X obj 342 602 cg-seq-player seq-\$1, f 24;
#X obj 570 346 sel 1 4, f 8;
#X obj 257 818 r \$0-pass;
#X obj 342 670 route note note-off knob, f 53;
#X obj 342 217 r cg-beat-clock;
#X obj 675 199 loadbang;
#X msg 675 256 1;
#N canvas 5 50 1905 999 seq-clocker 0;
#N canvas 11 50 1241 632 clock-control 0;
#X obj 15 63 inlet;
#X obj 297 57 inlet;
#X obj 400 57 inlet;
#X obj 188 432 outlet;
#X obj 516 55 inlet;
#X text 343 58 stop;
#X text 446 58 start;
#X obj 403 442 outlet;
#X text 248 433 beat clock out;
#X text 558 57 start on next beat;
#X obj 695 58 inlet;
#X text 742 57 loop ctrl;
#X obj 836 58 inlet;
#X text 57 60 beat clock in;
#X obj 298 98 bang;
#X obj 398 89 bang;
#X obj 516 85 bang;
#X msg 299 124 0;
#X obj 414 124 t b b;
#X obj 423 322 t b b;
#N canvas 503 267 450 300 wait-for-next-beat 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 386 297 pd wait-for-next-beat;
#X msg 467 360 1;
#X msg 445 156 1;
#X obj 773 437 outlet;
#X text 833 436 spigot control;
#X obj 748 234 spigot 1;
#X obj 798 184 ==;
#X obj 756 271 bang;
#X msg 757 297 0;
#X text 813 234 if loop off \, shut off seq clock output at end;
#X text 883 56 seq end in;
#X text 460 443 seq clock start;
#X obj 40 98 t f f;
#X obj 169 179 <;
#X obj 169 205 sel 1;
#X obj 172 144 t f f;
#X text 212 187 bang on next rollover \, top of beat;
#X connect 0 0 32 0;
#X connect 1 0 14 0;
#X connect 2 0 15 0;
#X connect 4 0 16 0;
#X connect 10 0 26 0;
#X connect 12 0 25 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 20 1;
#X connect 17 0 23 0;
#X connect 18 0 7 0;
#X connect 18 1 22 0;
#X connect 19 0 7 0;
#X connect 19 1 21 0;
#X connect 20 0 19 0;
#X connect 21 0 23 0;
#X connect 22 0 23 0;
#X connect 25 0 27 0;
#X connect 26 0 25 1;
#X connect 27 0 28 0;
#X connect 28 0 23 0;
#X connect 32 0 3 0;
#X connect 32 1 35 0;
#X connect 33 0 34 0;
#X connect 34 0 20 0;
#X connect 35 0 33 1;
#X connect 35 1 33 0;
#X restore 211 199 pd clock-control;
#X obj 457 97 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 284 22 start;
#X text 347 19 start on next beat;
#X text 531 23 loop;
#X obj 236 342 spigot;
#N canvas 226 50 1124 809 clocker 0;
#X obj 312 332 wrap;
#X floatatom 339 413 5 0 0 0 - - -, f 5;
#X obj 458 134 t b b;
#X obj 453 82 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 936 330 5 0 0 0 - - -, f 5;
#X obj 312 310 - 0;
#X obj 314 215 f;
#X obj 312 355 t f f;
#X obj 273 690 outlet;
#X obj 271 608 + 1;
#X obj 453 53 inlet;
#X obj 993 50 inlet;
#X text 1040 51 length;
#X obj 311 61 inlet;
#X obj 352 688 outlet;
#X text 40 321 derive an internal beat clock from the master by offsetting
phase., f 34;
#X text 392 538 bang at end;
#X obj 332 506 >= 4;
#X obj 312 438 + 0;
#X text 47 609 send out seq clock. for the last value send out 1 cause
if looping this would be where it wraps around., f 33;
#N canvas 0 50 450 300 wait-for-next-tick 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 313 176 pd wait-for-next-tick;
#X text 503 50 start;
#X obj 517 165 t b b;
#X obj 340 536 sel 1 0;
#X obj 290 572 f;
#X obj 312 467 t f f;
#X msg 319 611 1;
#X obj 402 665 s \$0-loop;
#X obj 515 137 r \$0-loop;
#X obj 473 618 f;
#X obj 473 643 - 4;
#X obj 347 248 f;
#X obj 347 281 - 0;
#X obj 345 573 t b b b b;
#X obj 303 103 t f b f f;
#N canvas 80 99 660 336 count-beats 0;
#X obj 175 216 + 1;
#X msg 230 99 0;
#X obj 126 152 <;
#X obj 126 178 sel 1;
#X obj 129 117 t f f;
#X obj 141 219 i 1;
#X text 225 151 when current value is lees than previous value the
phasor rolled over and we increment the beat count.;
#X obj 125 47 inlet;
#X obj 136 269 outlet;
#X obj 303 37 inlet;
#X text 171 44 beat clock in;
#X text 348 38 reset;
#X text 184 271 count;
#X connect 0 0 5 1;
#X connect 1 0 2 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 1;
#X connect 4 1 2 0;
#X connect 5 0 0 0;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 9 0 1 0;
#X restore 339 387 pd count-beats;
#X text 443 366 when phasor is reset from a start condition or rollover
\, reset beat counter., f 25;
#X text 356 64 beat clock;
#X obj 473 669 s \$0-overshoot;
#X obj 385 245 r \$0-overshoot;
#X text 87 461 add beat count to beat phase;
#X text 509 244 subtract the overshoot amount from below (the amount
the sequence clock advanced beyond the sequence length);
#X text 555 59 when we start the sequence we want the first output
to be 1 (top of first beat) \, so we wait for next tick.;
#X text 175 701 seq clock out;
#X text 432 704 bang at end of sequence. this gets sent out before
the seq clock. since the sequence clock just loops \, this is useful
for shutting off the output externally (spigot) if you just want a
seuqnce to play once;
#X floatatom 573 670 10 0 0 0 - - -, f 10;
#X text 28 55 this patch takes a 0-1 beat phase clock input and outputs
a sequence clock of arbitrary length that is syncrhonized to the input
clock., f 38;
#X text 29 159 it corrects for overshoot when the clock doesn't exactly
equal the length., f 38;
#X text 593 145 on loop \, the last value (equal to sequence length)
is acutally the top of the next loop \, so we use the previous beat
phase value as the offset.;
#X text 560 597 we can't depend on the sequence clock (which is based
on the input beat phasor) being exactly equal to the sequence length.
so if it advances past the sequence length \, subtract this overshoot
on the next loop to keep everything in sync.;
#X text 29 119 the sequence clock goes from 1 to len+1 and loops continuously
, f 38;
#X connect 0 0 7 0;
#X connect 1 0 18 1;
#X connect 2 0 20 1;
#X connect 2 1 35 1;
#X connect 3 0 2 0;
#X connect 4 0 17 1;
#X connect 4 0 30 1;
#X connect 5 0 0 0;
#X connect 6 0 5 1;
#X connect 7 0 18 0;
#X connect 7 1 35 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 13 0 34 0;
#X connect 17 0 23 0;
#X connect 18 0 25 0;
#X connect 20 0 6 0;
#X connect 22 0 31 0;
#X connect 22 1 35 1;
#X connect 23 0 33 0;
#X connect 23 1 24 0;
#X connect 24 0 9 0;
#X connect 25 0 17 0;
#X connect 25 1 24 1;
#X connect 25 1 29 1;
#X connect 26 0 8 0;
#X connect 28 0 22 0;
#X connect 29 0 30 0;
#X connect 30 0 38 0;
#X connect 30 0 45 0;
#X connect 31 0 32 0;
#X connect 32 0 5 1;
#X connect 33 0 26 0;
#X connect 33 1 14 0;
#X connect 33 2 27 0;
#X connect 33 3 29 0;
#X connect 34 0 5 0;
#X connect 34 1 20 0;
#X connect 34 2 6 1;
#X connect 34 3 31 1;
#X connect 35 0 1 0;
#X connect 39 0 32 1;
#X restore 211 281 pd clocker;
#X obj 420 461 outlet;
#X obj 323 464 outlet;
#X obj 584 63 inlet;
#X text 624 63 length;
#X obj 75 42 inlet;
#X obj 257 238 t b b;
#X obj 360 325 t b b;
#X obj 234 457 outlet;
#X text 180 491 seq clock out;
#X text 312 490 seq starting;
#X text 418 489 seq ended;
#X text 115 44 beat clock;
#X obj 228 50 inlet;
#X obj 284 48 inlet;
#X obj 368 46 inlet;
#X obj 502 45 inlet;
#X text 221 23 stop;
#X text 392 272 the clocker just loops forever. it sends out a bang
at the end of each loop that we can use to shut off its output if we
don't want a looping clock.;
#X obj 395 395 spigot;
#X obj 584 85 - 1;
#X connect 0 0 6 0;
#X connect 0 1 12 0;
#X connect 0 2 5 1;
#X connect 0 2 25 1;
#X connect 1 0 0 4;
#X connect 5 0 14 0;
#X connect 6 0 5 0;
#X connect 6 1 13 0;
#X connect 9 0 26 0;
#X connect 11 0 0 0;
#X connect 12 0 6 1;
#X connect 12 1 8 0;
#X connect 13 0 0 5;
#X connect 13 1 25 0;
#X connect 19 0 0 1;
#X connect 20 0 0 2;
#X connect 21 0 0 3;
#X connect 22 0 1 0;
#X connect 25 0 7 0;
#X connect 26 0 6 2;
#X restore 342 280 pd seq-clocker - - - - - - - - - - - - - - - - -
- - - - - - - -;
#X obj 759 252 r length-\$1;
#X obj 500 133 t b;
#X obj 496 178 t b b;
#X obj 572 171 ==;
#X obj 507 631 s length-\$1;
#X obj 832 537 r knob1;
#X obj 966 531 r knob2;
#X obj 1084 534 r knob3;
#X obj 1225 534 r knob4;
#X obj 852 599 f;
#X obj 986 593 f;
#X obj 1104 596 f;
#X obj 1344 605 f;
#X obj 1341 635 s seq3-\$1-k4;
#X obj 1104 627 s seq3-\$1-k3;
#X obj 986 632 s seq3-\$1-k2;
#X obj 862 627 s seq3-\$1-k1;
#X obj 1051 477 t b;
#X text 1037 440 bang knobs evey loop to preserve where they are set
too;
#X obj 611 68 sel 0 1 2, f 28;
#X msg 611 90 0;
#X msg 686 97 1;
#X obj 611 46 f \$2;
#X text 723 20 see the quantize stuff for the global quantize options
with arg2;
#X text 823 74 0 = no q at all. 1+2 wait for beat to start seq;
#X text 528 602 play the stores text file;
#X text 728 672 route note ons and offs \, and knobs;
#X floatatom 838 323 5 0 0 0 - - -, f 5;
#X obj 722 459 midiout;
#X msg 722 437 250;
#X text 763 439 tell a MIDI instrument to play;
#X obj 550 397 t b b b b b, f 35;
#X obj 820 397 s seq3-\$1-doit;
#N canvas 5 50 1276 866 auto-knobs 0;
#X obj 435 295 route 1 2 3 4, f 64;
#X obj 435 470 s seq3-\$1-k1;
#X obj 771 398 s seq3-\$1-k4;
#X obj 679 426 s seq3-\$1-k3;
#X obj 547 448 s seq3-\$1-k2;
#X obj 435 181 inlet;
#X text 849 417 <--- drop these as receives in the parent patches knobs!
;
#X connect 0 0 1 0;
#X connect 0 1 4 0;
#X connect 0 2 3 0;
#X connect 0 3 2 0;
#X connect 5 0 0 0;
#X restore 605 730 pd auto-knobs;
#X connect 1 0 22 0;
#X connect 2 0 30 0;
#X connect 2 1 31 0;
#X connect 2 2 30 0;
#X connect 3 0 2 0;
#X connect 4 0 19 0;
#X connect 6 0 5 0;
#X connect 7 0 21 1;
#X connect 8 0 21 2;
#X connect 9 0 32 0;
#X connect 9 0 11 1;
#X connect 10 0 28 2;
#X connect 11 0 28 3;
#X connect 13 0 51 0;
#X connect 15 0 18 0;
#X connect 16 0 15 0;
#X connect 17 0 0 0;
#X connect 17 1 15 0;
#X connect 18 0 0 0;
#X connect 20 0 16 0;
#X connect 21 0 24 0;
#X connect 21 1 33 0;
#X connect 22 2 4 0;
#X connect 23 0 0 0;
#X connect 24 0 17 0;
#X connect 24 1 17 0;
#X connect 24 2 62 0;
#X connect 25 0 28 0;
#X connect 26 0 27 0;
#X connect 27 0 28 4;
#X connect 28 0 21 0;
#X connect 28 1 60 0;
#X connect 28 2 60 0;
#X connect 29 0 28 5;
#X connect 29 0 56 0;
#X connect 30 0 28 1;
#X connect 31 0 10 0;
#X connect 31 1 11 0;
#X connect 32 0 10 1;
#X connect 34 0 38 1;
#X connect 35 0 39 1;
#X connect 36 0 40 1;
#X connect 37 0 41 1;
#X connect 38 0 45 0;
#X connect 39 0 44 0;
#X connect 40 0 43 0;
#X connect 41 0 42 0;
#X connect 46 0 38 0;
#X connect 46 0 39 0;
#X connect 46 0 40 0;
#X connect 46 0 41 0;
#X connect 48 0 49 0;
#X connect 48 1 50 0;
#X connect 48 2 50 0;
#X connect 49 0 9 0;
#X connect 50 0 9 0;
#X connect 51 0 48 0;
#X connect 58 0 57 0;
#X connect 60 0 6 0;
#X connect 60 1 19 0;
#X connect 60 2 46 0;
#X connect 60 3 58 0;
#X connect 60 4 61 0;
#X restore 46 588 pd play-the-seq;
#X obj 545 547 r seq3-\$1-actions;
#X floatatom 545 569 5 0 0 0 - - -, f 5;
#X obj 49 299 cg-seq-writer \$1;
#X text 269 21 arg 1: unique number;
#X text 275 45 arg 2: 0 = no length \, and no note q;
#X text 324 64 1 = length q to nearest beat \, no note q;
#X text 324 84 2 = length q to nearest beat and note q to nearest 16th
note;
#X text 170 589 play the recorded sequence;
#X text 186 544 code for length and note quantize;
#X text 549 191 state control;
#X text 173 108 count the incoming notes;
#X text 126 137 latch incoming notes;
#X text 109 172 incoming notes get passed to the outlet;
#X text 589 569 heads up display of states;
#X msg 376 351 read seq-\$1.txt;
#X msg 225 348 write seq-\$1.txt;
#X connect 1 0 23 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 6 0 30 1;
#X connect 7 0 8 0;
#X connect 8 0 30 1;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 12 1 10 0;
#X connect 13 0 30 0;
#X connect 14 0 42 0;
#X connect 15 0 43 0;
#X connect 16 0 14 0;
#X connect 17 0 15 0;
#X connect 18 0 20 0;
#X connect 19 0 11 0;
#X connect 21 0 1 0;
#X connect 21 1 22 0;
#X connect 23 0 13 0;
#X connect 23 1 24 0;
#X connect 25 0 21 0;
#X connect 27 0 0 0;
#X connect 28 0 29 0;
#X connect 30 0 19 0;
#X connect 30 1 18 0;
#X connect 42 0 20 0;
#X connect 43 0 20 0;
