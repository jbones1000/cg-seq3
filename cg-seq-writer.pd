#N canvas 88 63 1758 981 10;
#X obj 275 21 inlet notes;
#X obj 1268 108 inlet aux;
#X obj 1219 496 f;
#X obj 651 262 s \$0-seq-recording;
#X obj 1291 175 s \$0-arm-rec;
#X obj 1268 207 s \$0-stop-rec;
#X obj 725 296 r \$0-stop-rec;
#X obj 1268 150 sel 0 1;
#X obj 381 138 spigot 0;
#X obj 275 83 t a a, f 8;
#X msg 516 151 0;
#X obj 434 86 r \$0-arm-rec;
#X msg 434 108 1;
#X obj 573 285 s \$0-clear-seq;
#X obj 328 463 spigot 0;
#X msg 381 427 1;
#X obj 1237 413 spigot 1;
#X text 460 108 arm rec;
#X text 506 179 wait for first on note;
#X msg 651 241 1;
#X text 550 151 disable;
#X obj 381 212 t b b b b a b b b, f 39;
#X obj 496 352 s \$0-restart-counts;
#X obj 419 404 s \$0-metro-valve;
#X msg 419 375 1;
#X obj 1322 375 r \$0-metro-valve;
#X obj 458 375 s \$0-metro-phase;
#X obj 1388 264 r \$0-metro-phase;
#X obj 725 492 s \$0-seq-recording;
#X msg 725 470 0;
#X obj 896 438 s \$0-close;
#X obj 417 431 r \$0-close;
#X msg 896 416 0;
#X obj 1290 351 r \$0-close;
#X text 695 205 report recording \, close the spigot \, clear the text
\, send the list to write first 2 \, restart counts \, restart metro
\, open metro valve \, open for rest of notes;
#X obj 385 61 r \$0-close;
#X obj 723 570 bag;
#X msg 905 475 flush;
#X obj 723 592 pack 0 0;
#X text 820 295 report off \, close all valves \, flush on notes \,
bang length;
#X obj 776 458 s \$0-get-length;
#X obj 1101 446 r \$0-get-length;
#X obj 725 358 spigot 0;
#X obj 725 388 t b b b b b, f 33;
#X msg 1003 364 0;
#X msg 820 320 1;
#X obj 1111 371 s lcl-metro-\$0;
#N canvas 45 50 823 774 rewind-write-frst-3 0;
#X obj 132 278 inlet;
#X obj 130 356 outlet;
#X obj 510 460 t a b;
#X msg 542 495 0;
#X obj 312 445 t a b;
#X msg 344 480 1;
#X obj 136 330 t a b b, f 32;
#X msg 312 423 list length 1;
#X msg 510 438 list dummy x;
#X obj 508 520 text set seq-\$1;
#X obj 310 508 text set seq-\$1;
#X text 329 186 fill in the first three lines of the txt;
#X connect 0 0 6 0;
#X connect 2 0 9 0;
#X connect 2 1 3 0;
#X connect 3 0 9 1;
#X connect 4 0 10 0;
#X connect 4 1 5 0;
#X connect 5 0 10 1;
#X connect 6 0 1 0;
#X connect 6 1 7 0;
#X connect 6 2 8 0;
#X connect 7 0 4 0;
#X connect 8 0 2 0;
#X restore 535 308 pd rewind-write-frst-3;
#X obj 982 836 + 1;
#X obj 190 506 r lcl-metro-\$0;
#X obj 560 674 unpack 0 0;
#X obj 1219 522 t a b;
#X msg 1251 573 1;
#X obj 521 813 pack 0 0 0;
#X msg 953 797 3;
#X obj 627 698 t f f;
#X obj 659 726 sel 0;
#X msg 659 748 0;
#X obj 691 748 t b;
#X msg 691 770 1;
#X obj 659 804 f;
#X obj 521 853 spigot 0;
#X obj 599 854 spigot 0;
#X obj 659 831 ==;
#X msg 599 881 list note-off \$1 \$2 \$3;
#X msg 521 904 list note \$1 \$2 \$3;
#X obj 324 714 t b a b, f 10;
#X obj 390 523 route notes;
#X text 670 64 incoming data has to be labeled: note on and offs are:
notes. 0-1 float data(like from knobs) needs one symbol to be routed
later knob1 \, knob2 \, etc... Notes just need to be seperated from
other data.;
#X text 751 9 arg1 name of text file;
#X obj 1244 687 r \$0-seq-recording;
#X obj 1244 717 outlet output recording status;
#X obj 1495 695 r \$0-clear-seq;
#X obj 1495 717 outlet clear bang;
#X obj 1237 239 r cg-beat-clock;
#X obj 584 416 s lcl-metro-\$0;
#X obj 535 330 t a b;
#X obj 390 496 route list;
#X obj 521 628 t b a b, f 10;
#X obj 521 527 t a a, f 9;
#X msg 723 843 list note-off \$1 \$2 \$3;
#X obj 190 533 t f f f, f 23;
#X obj 723 658 f;
#X obj 723 628 t b a b, f 16;
#X text 1010 809 event counter;
#X obj 779 656 unpack 0 0, f 6;
#X obj 723 694 pack 0 0 0, f 14;
#X obj 555 38 r \$0-stop-rec;
#X obj 555 60 t b;
#X msg 555 82 0;
#X msg 1140 573 list length \$1;
#X obj 935 836 f 3;
#X obj 359 751 unpack s 0 0;
#X obj 324 802 pack 0 s 0 0, f 17;
#X msg 324 838 list \$2 \$1 \$3 \$4;
#X obj 1655 176 loadbang;
#X obj 1527 252 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1550 250 start on next beat;
#X obj 1385 211 r \$0-seq-recording;
#X obj 1385 233 sel 0;
#X msg 1570 278 1;
#N canvas 9 65 992 609 seq-clocker 0;
#N canvas 7 50 1241 632 clock-control 0;
#X obj 15 63 inlet;
#X obj 297 57 inlet;
#X obj 400 57 inlet;
#X obj 188 432 outlet;
#X obj 516 55 inlet;
#X text 343 58 stop;
#X text 446 58 start;
#X obj 403 442 outlet;
#X text 248 433 beat clock out;
#X text 558 57 start on next beat;
#X obj 695 58 inlet;
#X text 742 57 loop ctrl;
#X obj 836 58 inlet;
#X text 57 60 beat clock in;
#X obj 298 98 bang;
#X obj 398 89 bang;
#X obj 516 85 bang;
#X msg 299 124 0;
#X obj 414 124 t b b;
#X obj 423 322 t b b;
#N canvas 502 270 450 300 wait-for-next-beat 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 386 297 pd wait-for-next-beat;
#X msg 467 360 1;
#X msg 445 156 1;
#X obj 773 437 outlet;
#X text 833 436 spigot control;
#X obj 748 234 spigot 1;
#X obj 798 184 ==;
#X obj 756 271 bang;
#X msg 757 297 0;
#X text 813 234 if loop off \, shut off seq clock output at end;
#X text 883 56 seq end in;
#X text 460 443 seq clock start;
#X obj 40 98 t f f;
#X obj 169 179 <;
#X obj 169 205 sel 1;
#X obj 172 144 t f f;
#X text 212 187 bang on next rollover \, top of beat;
#X connect 0 0 32 0;
#X connect 1 0 14 0;
#X connect 2 0 15 0;
#X connect 4 0 16 0;
#X connect 10 0 26 0;
#X connect 12 0 25 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 20 1;
#X connect 17 0 23 0;
#X connect 18 0 7 0;
#X connect 18 1 22 0;
#X connect 19 0 7 0;
#X connect 19 1 21 0;
#X connect 20 0 19 0;
#X connect 21 0 23 0;
#X connect 22 0 23 0;
#X connect 25 0 27 0;
#X connect 26 0 25 1;
#X connect 27 0 28 0;
#X connect 28 0 23 0;
#X connect 32 0 3 0;
#X connect 32 1 35 0;
#X connect 33 0 34 0;
#X connect 34 0 20 0;
#X connect 35 0 33 1;
#X connect 35 1 33 0;
#X restore 211 199 pd clock-control;
#X obj 457 97 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 284 22 start;
#X text 347 19 start on next beat;
#X text 531 23 loop;
#X obj 236 342 spigot;
#N canvas 223 50 1124 809 clocker 0;
#X obj 312 332 wrap;
#X floatatom 339 413 5 0 0 0 - - -, f 5;
#X obj 458 134 t b b;
#X obj 453 82 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 936 330 5 0 0 0 - - -, f 5;
#X obj 312 310 - 0;
#X obj 314 215 f;
#X obj 312 355 t f f;
#X obj 273 690 outlet;
#X obj 271 608 + 1;
#X obj 453 53 inlet;
#X obj 993 50 inlet;
#X text 1040 51 length;
#X obj 290 58 inlet;
#X obj 352 688 outlet;
#X text 89 314 derive an internal beat clock from the master by offsetting
phase., f 34;
#X text 392 538 bang at end;
#X obj 332 506 >= 4;
#X obj 312 438 + 0;
#X text 47 609 send out seq clock. for the last value send out 1 cause
if looping this would be where it wraps around., f 33;
#N canvas 0 50 450 300 wait-for-next-tick 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 313 176 pd wait-for-next-tick;
#X text 503 50 start;
#X obj 517 165 t b b;
#X obj 340 536 sel 1 0;
#X obj 290 572 f;
#X obj 312 467 t f f;
#X msg 319 611 1;
#X obj 402 665 s \$0-loop;
#X obj 515 137 r \$0-loop;
#X obj 473 618 f;
#X obj 473 643 - 4;
#X obj 347 248 f;
#X obj 347 281 - 0;
#X obj 345 573 t b b b b;
#X obj 291 106 t f b f f;
#N canvas 80 99 660 336 count-beats 0;
#X obj 175 216 + 1;
#X msg 230 99 0;
#X obj 126 152 <;
#X obj 126 178 sel 1;
#X obj 129 117 t f f;
#X obj 141 219 i 1;
#X text 225 151 when current value is lees than previous value the
phasor rolled over and we increment the beat count.;
#X obj 125 47 inlet;
#X obj 136 269 outlet;
#X obj 303 37 inlet;
#X text 171 44 beat clock in;
#X text 348 38 reset;
#X text 184 271 count;
#X connect 0 0 5 1;
#X connect 1 0 2 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 1;
#X connect 4 1 2 0;
#X connect 5 0 0 0;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 9 0 1 0;
#X restore 339 387 pd count-beats;
#X text 443 366 when phasor is reset from a start condition or rollover
\, reset beat counter., f 25;
#X text 335 61 beat clock;
#X obj 473 669 s \$0-overshoot;
#X obj 385 245 r \$0-overshoot;
#X text 87 461 add beat count to beat phase;
#X text 509 244 subtract the overshoot amount from below (the amount
the sequence clock advanced beyond the sequence length);
#X text 555 59 when we start the sequence we want the first output
to be 1 (top of first beat) \, so we wait for next tick.;
#X text 175 701 seq clock out;
#X text 432 704 bang at end of sequence. this gets sent out before
the seq clock. since the sequence clock just loops \, this is useful
for shutting off the output externally (spigot) if you just want a
seuqnce to play once;
#X floatatom 573 670 10 0 0 0 - - -, f 10;
#X text 28 55 this patch takes a 0-1 beat phase clock input and outputs
a sequence clock of arbitrary length that is syncrhonized to the input
clock., f 38;
#X text 29 159 it corrects for overshoot when the clock doesn't exactly
equal the length., f 38;
#X text 593 145 on loop \, the last value (equal to sequence length)
is acutally the top of the next loop \, so we use the previous beat
phase value as the offset.;
#X text 560 597 we can't depend on the sequence clock (which is based
on the input beat phasor) being exactly equal to the sequence length.
so if it advances past the sequence length \, subtract this overshoot
on the next loop to keep everything in sync.;
#X text 29 119 the sequence clock goes from 1 to len+1 and loops continuously
, f 38;
#X connect 0 0 7 0;
#X connect 1 0 18 1;
#X connect 2 0 20 1;
#X connect 2 1 35 1;
#X connect 3 0 2 0;
#X connect 4 0 17 1;
#X connect 4 0 30 1;
#X connect 5 0 0 0;
#X connect 6 0 5 1;
#X connect 7 0 18 0;
#X connect 7 1 35 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 13 0 34 0;
#X connect 17 0 23 0;
#X connect 18 0 25 0;
#X connect 20 0 6 0;
#X connect 22 0 31 0;
#X connect 22 1 35 1;
#X connect 23 0 33 0;
#X connect 23 1 24 0;
#X connect 24 0 9 0;
#X connect 25 0 17 0;
#X connect 25 1 24 1;
#X connect 25 1 29 1;
#X connect 26 0 8 0;
#X connect 28 0 22 0;
#X connect 29 0 30 0;
#X connect 30 0 38 0;
#X connect 30 0 45 0;
#X connect 31 0 32 0;
#X connect 32 0 5 1;
#X connect 33 0 26 0;
#X connect 33 1 14 0;
#X connect 33 2 27 0;
#X connect 33 3 29 0;
#X connect 34 0 5 0;
#X connect 34 1 20 0;
#X connect 34 2 6 1;
#X connect 34 3 31 1;
#X connect 35 0 1 0;
#X connect 39 0 32 1;
#X restore 211 281 pd clocker;
#X obj 420 461 outlet;
#X obj 323 464 outlet;
#X obj 584 63 inlet;
#X text 624 63 length;
#X obj 75 42 inlet;
#X obj 257 238 t b b;
#X obj 360 325 t b b;
#X obj 234 457 outlet;
#X text 180 491 seq clock out;
#X text 312 490 seq starting;
#X text 418 489 seq ended;
#X text 115 44 beat clock;
#X obj 228 50 inlet;
#X obj 284 48 inlet;
#X obj 368 46 inlet;
#X obj 502 45 inlet;
#X text 221 23 stop;
#X text 392 272 the clocker just loops forever. it sends out a bang
at the end of each loop that we can use to shut off its output if we
don't want a looping clock.;
#X connect 0 0 6 0;
#X connect 0 1 12 0;
#X connect 0 2 5 1;
#X connect 1 0 0 4;
#X connect 5 0 14 0;
#X connect 6 0 5 0;
#X connect 6 1 13 0;
#X connect 9 0 6 2;
#X connect 11 0 0 0;
#X connect 12 0 6 1;
#X connect 12 1 8 0;
#X connect 13 0 0 5;
#X connect 13 1 7 0;
#X connect 19 0 0 1;
#X connect 20 0 0 2;
#X connect 21 0 0 3;
#X connect 22 0 1 0;
#X restore 1237 302 pd seq-clocker - - - - - - - - - - - - - - - -
- - - - - - - - -;
#X msg 1654 208 4000;
#X obj 656 615 - 0.01;
#X obj 521 716 f;
#X msg 584 388 1;
#X obj 905 783 t b;
#X obj 953 775 r \$0-restart-counts;
#X obj 324 750 f;
#N canvas 14 50 1296 821 the-knobs 0;
#X obj 280 211 r knob1;
#X obj 414 205 r knob2;
#X obj 532 208 r knob3;
#X obj 673 208 r knob4;
#X obj 280 411 outlet;
#X text 546 97 Number the knob 0-whatever than the floating point 0-1
name it knob 1st;
#X msg 280 349 knob 1 \$1;
#X msg 412 347 knob 2 \$1;
#X msg 532 347 knob 3 \$1;
#X msg 673 347 knob 4 \$1;
#X obj 300 273 f;
#X obj 434 267 f;
#X obj 552 270 f;
#X obj 792 279 f;
#X obj 499 152 r \$0-arm-rec;
#X obj 789 309 s seq3-\$1-k4;
#X obj 552 301 s seq3-\$1-k3;
#X obj 434 306 s seq3-\$1-k2;
#X obj 310 301 s seq3-\$1-k1;
#X text 597 150 get the current state of the knobs before recording
\, to counter act a knob change from the breif seq play.;
#X connect 0 0 6 0;
#X connect 0 0 10 1;
#X connect 1 0 7 0;
#X connect 1 0 11 1;
#X connect 2 0 8 0;
#X connect 2 0 12 1;
#X connect 3 0 9 0;
#X connect 3 0 13 1;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 10 0 18 0;
#X connect 11 0 17 0;
#X connect 12 0 16 0;
#X connect 13 0 15 0;
#X connect 14 0 10 0;
#X connect 14 0 11 0;
#X connect 14 0 12 0;
#X connect 14 0 13 0;
#X restore 293 50 pd the-knobs;
#X obj 522 934 text set seq-\$1, f 69;
#X obj 1217 622 text set seq-\$1;
#X connect 0 0 9 0;
#X connect 1 0 7 0;
#X connect 2 0 51 0;
#X connect 6 0 42 0;
#X connect 7 0 5 0;
#X connect 7 1 4 0;
#X connect 8 0 21 0;
#X connect 9 0 8 0;
#X connect 9 1 14 0;
#X connect 10 0 8 1;
#X connect 11 0 12 0;
#X connect 12 0 8 1;
#X connect 14 0 77 0;
#X connect 15 0 14 1;
#X connect 16 0 2 1;
#X connect 19 0 3 0;
#X connect 21 0 15 0;
#X connect 21 1 24 0;
#X connect 21 2 26 0;
#X connect 21 3 22 0;
#X connect 21 4 47 0;
#X connect 21 5 13 0;
#X connect 21 6 10 0;
#X connect 21 7 19 0;
#X connect 21 7 45 0;
#X connect 24 0 23 0;
#X connect 25 0 16 1;
#X connect 27 0 101 2;
#X connect 29 0 28 0;
#X connect 31 0 14 1;
#X connect 32 0 30 0;
#X connect 33 0 16 1;
#X connect 35 0 8 1;
#X connect 36 0 38 0;
#X connect 37 0 36 0;
#X connect 38 0 83 0;
#X connect 41 0 2 0;
#X connect 42 0 43 0;
#X connect 43 0 29 0;
#X connect 43 1 40 0;
#X connect 43 2 37 0;
#X connect 43 3 32 0;
#X connect 43 4 44 0;
#X connect 44 0 42 1;
#X connect 45 0 42 1;
#X connect 47 0 76 0;
#X connect 48 0 91 1;
#X connect 49 0 81 0;
#X connect 50 0 53 1;
#X connect 50 1 55 0;
#X connect 51 0 90 0;
#X connect 51 1 52 0;
#X connect 52 0 111 1;
#X connect 53 0 61 0;
#X connect 53 0 62 0;
#X connect 54 0 91 1;
#X connect 55 0 53 2;
#X connect 55 1 56 0;
#X connect 56 0 57 0;
#X connect 56 1 58 0;
#X connect 57 0 60 0;
#X connect 58 0 59 0;
#X connect 59 0 60 0;
#X connect 60 0 61 1;
#X connect 60 0 63 0;
#X connect 61 0 65 0;
#X connect 62 0 64 0;
#X connect 63 0 62 1;
#X connect 64 0 110 0;
#X connect 65 0 110 0;
#X connect 66 0 108 0;
#X connect 66 1 92 0;
#X connect 66 2 106 0;
#X connect 67 0 79 0;
#X connect 67 1 66 0;
#X connect 70 0 71 0;
#X connect 72 0 73 0;
#X connect 74 0 101 0;
#X connect 76 0 77 0;
#X connect 76 1 105 0;
#X connect 77 0 67 0;
#X connect 77 1 67 0;
#X connect 78 0 104 0;
#X connect 78 1 50 0;
#X connect 78 2 106 0;
#X connect 79 0 78 0;
#X connect 79 1 36 0;
#X connect 80 0 110 0;
#X connect 81 0 108 1;
#X connect 81 1 104 1;
#X connect 81 2 103 0;
#X connect 82 0 86 0;
#X connect 83 0 82 0;
#X connect 83 1 85 0;
#X connect 83 2 106 0;
#X connect 85 0 86 1;
#X connect 85 1 86 2;
#X connect 86 0 80 0;
#X connect 87 0 88 0;
#X connect 88 0 89 0;
#X connect 89 0 8 1;
#X connect 90 0 111 0;
#X connect 91 0 48 0;
#X connect 91 0 110 1;
#X connect 92 0 93 1;
#X connect 92 1 93 2;
#X connect 92 2 93 3;
#X connect 93 0 94 0;
#X connect 94 0 110 0;
#X connect 95 0 102 0;
#X connect 95 0 100 0;
#X connect 96 0 101 3;
#X connect 98 0 99 0;
#X connect 99 0 101 1;
#X connect 100 0 101 4;
#X connect 101 0 16 0;
#X connect 101 0 46 0;
#X connect 102 0 101 5;
#X connect 103 0 82 1;
#X connect 104 0 53 0;
#X connect 105 0 75 0;
#X connect 106 0 91 0;
#X connect 107 0 54 0;
#X connect 108 0 93 0;
#X connect 109 0 9 0;
